@page
@using MySql.Data.MySqlClient;
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    int playlistId = -1;
    if (Request.Query.ContainsKey("playlistId"))
    {
        if (int.TryParse(Request.Query["playlistId"], out int tempPlaylistId))
        {
            playlistId = tempPlaylistId;
        }
    }

    try
    {
        if (Request.Query.ContainsKey("songId"))
        {
            Console.WriteLine("ENTERED");
            if (int.TryParse(Request.Query["songId"], out int songId))
            {
                String connectionStr = Configuration.GetConnectionString("DefaultConnection");
                using (MySqlConnection connection = new MySqlConnection(connectionStr))
                {
                    await connection.OpenAsync();
                    MySqlTransaction mySqlTransaction = connection.BeginTransaction();
                    String sql = "UPDATE playlist_song AS ps SET deleted=True WHERE ps.song_id=@SongId";
                    using (MySqlCommand command = new MySqlCommand(sql, connection))
                    {
                        command.Transaction = mySqlTransaction;

                        command.Parameters.AddWithValue("@SongId", songId);

                        int affectedRows = await command.ExecuteNonQueryAsync();

                        if (affectedRows > 0)
                        {
                            Console.WriteLine("Success updating boolean on song in database: ");
                        }
                        else
                        {
                            Console.WriteLine("Error updating boolean on song in database: ");

                        }
                        mySqlTransaction.Commit();
                    }
                }
            }
        }
    }
    catch (Exception ex)
    {
        Console.WriteLine("Error updating boolean on song in database: " + ex.Message);
    }
    Response.Redirect($"/Playlists/PlaylistSongs?playlistId={playlistId}");
    }
@page
@model CoogMusic.Pages.Songs.UploadModel
@{
    ViewData["title"] = "Upload";
}

@if (User.Identity.IsAuthenticated)
{
    @if (User.IsInRole("Artist"))
        {
        <div class="form-container">
            <h1 class="text-center">New Song</h1>
            @if (Model.errorMessage.Length > 0)
                {
                <div class="alert alert-warning alert-dismissible fade show" role="alert">
                    <strong>@Model.errorMessage</strong>
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
                }
            <form method="POST" enctype="multipart/form-data">
                <div class="form-group">
                </div>
                <div id="song-details" style="display: block" class="form-group">
                    <div>
                        <label for="title">Title:</label>
                        <input type="text" id="title" name="Title" required class="form-input" value="@Model.songInfo.title">
                    </div>
                    <input type="hidden" id="duration" name="Duration">
                    <div>
                        @{
                            var userIdClaim = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier);
                            if (userIdClaim != null)
                            {
                                int userId = int.Parse(userIdClaim.Value);
                                <input type="hidden" id="artist" name="Artist" required class="form-input" value="@userId">
                            }
                        }
                    </div>

                    <div>
                        <label for="genre">Genre:</label>
                        @*<input type="text" id="genre" name="Genre" required class="form-input" value="@Model.songInfo.genre">*@
                        <select id="genre" name="genre" required class="form-input" value="@Model.songInfo.genre">
                            <option value="">Choose an option</option>
                            <option value="Rock">Rock</option>
                            <option value="Pop">Pop</option>
                            <option value="Hip-Hop">Hip-Hop</option>
                            <option value="Rap">Hip-Hop</option>
                            <option value="Jazz">Jazz</option>
                            <option value="Classical">Classical</option>
                            <option value="Corrido">Corrido</option>
                            <option value="Electronic">Electronic</option>
                            <option value="DubStep">DubStep</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div>
                        <label for="explicit" style="display: inline-block;">Explicit:</label>
                        <label class="custom-checkbox" style="display: inline-block;">
                            <input type="checkbox" id="explicit" name="Explicit" value="true" />
                            <span class="checkmark"></span>
                        </label>
                    </div>
                    <div>
                        <label for="album-name">Album:</label>
                        <select id="album" name="AlbumId" required class="form-input" value="">
                            <option value="" selected>Choose an Album</option>
                            @foreach (var item in Model.listAlbums)
                            {
                                <option value="@item.Id">@item.Title</option>
                            }
                        </select>
                        @if (!Model.listAlbums.Any())
                        {
                        <small class="form-text text-muted">You do not have any Albums. Please Publish one then come back!</small>

                        }
                    </div>
                    <div>
                        <label for="file">Select file:</label>
                        <input type="file" id="file" name="songFile" accept="audio/*" required class="form-file" value="@Model.songInfo.songFile" onchange="getDuration(this)">
                        <audio id="audioElement" style="display:none"></audio>
                    </div>
                </div>
                @if (Model.successMessage.Length > 0)
                    {
                    <div class="alert alert-success alert-dismissible fade show" role="alert">
                        <strong>@Model.successMessage</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                    </div>
                    }
                <button type="submit" name="submitBtn" class="btn btn-default">Submit</button>
                <a class="btn btn-outline-primary" href="/Songs/Index" role="button">Cancel</a>
            </form>
        </div>
        }
        else
        {
            <p>You are not authorized to upload Music.</p>
        }
}
else
{
    <p>You must log in to access this page.</p>
}

<script>
    function getDuration(input) {
    const audioElement = document.getElementById('audioElement');
    const file = input.files[0];
    audioElement.src = URL.createObjectURL(file);

    audioElement.onloadedmetadata = function() {
      const duration = audioElement.duration;
      document.getElementById('duration').value = duration;
    };
    }
</script>